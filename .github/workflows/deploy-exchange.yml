# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy to exchange

on:
  workflow_call:

jobs:
  deployExchange:
    name: Deploy to exchange
    runs-on: ubuntu-latest
    steps:
    
    - name: Check out this repo
      id: checkout-repo
      uses: actions/checkout@v3
    
    - name: Set up cache for Maven Dependencies(./m2/repository)
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - uses: actions/download-artifact@v3
      with:
        name: package

    - name: Deploy
      id: deploy-exchange
      env:
        MuleSoft_EE_Rep_Username: ${{ secrets.MuleSoft_EE_Rep_Username }}
        MuleSoft_EE_Rep_Password: ${{ secrets.MuleSoft_EE_Rep_Password }}
        AP_CICD_ConnectedApp_ClientID: ${{ secrets.AP_CICD_ConnectedApp_ClientID }}
        AP_CICD_ConnectedApp_ClientSecret: ${{ secrets.AP_CICD_ConnectedApp_ClientSecret }}
        AP_Organization_ID: ${{ secrets.AP_Organization_ID }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -s .maven/settings.xml \
        -Dmule.artifact=$artifactName \
        -DskipMunitTests